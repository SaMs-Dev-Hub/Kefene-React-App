.checkbox{
    margin-left: 80px;
    padding: 20px;
    color: black;
  }
  /* .inputorder{
    padding-left: 10px;
  } */
  h1 {
    margin-left: 100px;
    margin-top: 50px;
     font-weight: bold;
     color: black;
 }
 h5,h6{
   margin-left: 100px;
   margin-top: 20px;
   color: black;
 }
 .subContainer {

  max-width: 50%;
  margin-left: 100px;
  margin-bottom: -18%;
}
.container {
  display: flex;
  margin: 50px;
  margin-left: 300px;
  margin-right: 50px;
}
.table-wrapper {
  box-shadow: 0 0px 40px 0px;
}
#table-headers {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  overflow: hidden;
  display: flex;
  justify-content: space-between;
  padding-left: 10px;
}
.column1 {
  width: 70px;
  margin-left: 20px;
}

.column2 {
  width: 460px;
}

.column3 {
  width: 40px;
}

.column4 {
  width: 360px;
}

.column5 {
  width: 100px;
}


.columnp1 {
  width: 250px;
}

.columnp2 {
  width: 300px;
}

.columnp3{
  width: 250px;
}

.columnp4 {
  width: 250px;
}

.columnp5 {
  width: 170px;
}

.tableData {
  /* max-height: 500px; */
  max-height: 40px;
  margin-left: 310px;
  margin-top: -49px;
  margin-right: 140px;
}
.active {
  cursor: pointer;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  overflow: hidden;
}
.active td {
  color: black;
}

/* sssssssssss */

.trHeader {
  display: flex;
  justify-content: space-between;

}

#overlay {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background-color: white;
  display: none;
}

main {
  padding: 20px;
  max-width: 1268px;
  margin: 0 auto;
  margin-top: 50px;
  display: flex;
}

#table-section {
  margin-left: 40px;
}

a {
  text-decoration: none;
}

#info-wrapper {
  width: 40%;
  padding: 0 0 20px 0;
  text-align: center;
  font-size: 18px;
  padding: 20px;
}

#info-wrapper p {
  font-style: italic;
  color: gray;
}

#info-content {
  display: none;
  margin-top: 10px;
}

#info-wrapper > div {
  margin-bottom: 5px;
}

#table-wrapper {
  box-shadow: 0 0px 40px 0px rgba(0, 0, 0, 0.15);
}

#table-headers {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  overflow: hidden;
}

.tableData {
  max-height: 500px;
  overflow-y: overlay;
}

@-moz-document url-prefix() {
  .tableData {
    overflow-y: scroll;
  }
}

table {
  border-collapse: collapse;
  width: 100%;
  font-size: 14px;
  text-align: center;
  border-radius: 10px;
}

th {
  font-size: 18px;
  color: black;
  line-height: 1.4;

  padding-top: 18px;
  padding-bottom: 18px;
  width: 100%;
}

td {
  font-size: 16px;
  color: #808080;
  line-height: 1.4;
  padding-top: 16px;
  padding-bottom: 16px;
  padding-left: 30px;
}

.active td {
  color: black;
}

.active {
  cursor: pointer;
}
.table {
  cursor: pointer;
  background-color: white;
}
.wrapper{
display: flex;
flex-direction: row;

}
span {
margin-left: 10px;
}

/* import React, { useEffect, useState } from "react";
import { getOrders } from "../service/Index";
import { useNavigate } from "react-router-dom";
import style from "./Order.module.css";
import Navbar from "../../component/Navbar";
const Order = () => {
  const [orderData, setorderData] = useState([]);
  const [newitem, setNewitem] = useState(true);
  const [pack, setPack] = useState(true);
  const [intransit, setIntarnsit] = useState(true);
  const [deliever, setDeliever] = useState(true);
 
  const [orderApiData, setorderApiData] = useState([]);
  const [listCount, setListCount] = useState(0);


  useEffect(() => {
    getOrders()
      .then((res) => {
        // console.log('respnse = ',res)
        setorderApiData(res.data);
        setorderData(res.data);
        setListCount(res.data.length);
      })
      .catch((err) => {
        console.log("error coming= ", err);
      });
    // checkFilter();
  }, []);
  let pushArr = orderApiData;
  const handleChange = (e) => {
    const value = e.target.value;
    const flag = e.target.checked;
    let vehicle1 = true;
    let vehicle2 = true;
    let vehicle3 = true;
    let vehicle4 = true;
   
    let pushVehicle1 = false;
    let pushVehicle2 = false;
    let pushVehicle3 = false;
    let pushVehicle4 = false;
    
    if (value === "vehicle1") {
      vehicle1 = flag;
      pushVehicle1 = flag;
    }
    if (value === "vehicle2") {
      vehicle2 = flag;
      pushVehicle2 = flag;
    }
    if (value === "vehicle3") {
      vehicle3 = flag;
      pushVehicle3 = flag;
    }
    if (value === "vehicle4") {
      vehicle4 = flag;
      pushVehicle4 = flag;
    }
  

    var data1 = ["New"];
    var data2 = ["Packed"];
    var data3 = ["InTransit"];
    var data4 = ["Delivered"];
   
    const arr = orderData;
    if (!vehicle1) {
      for (let i = 0; i < arr.length; i++) {
        if (data1.indexOf(arr[i].orderStatus) != -1) {
          arr.splice(i, 1);
          i--;
        }
      }
    }
    if (!vehicle2) {
      for (let i = 0; i < arr.length; i++) {
        if (data2.indexOf(arr[i].orderStatus) != -1) {
          arr.splice(i, 1);
          i--;
        }
      }
    }
    if (!vehicle3) {
      for (let i = 0; i < arr.length; i++) {
        if (data3.indexOf(arr[i].orderStatus) != -1) {
          arr.splice(i, 1);
          i--;
        }
      }
    }
    if (!vehicle4) {
      for (let i = 0; i < arr.length; i++) {
        if (data4.indexOf(arr[i].orderStatus) != -1) {
          arr.splice(i, 1);
          i--;
        }
      }
    }
   

    if (pushVehicle1) {
      pushArr.map((ele) => {
        if (ele.orderStatus === "New") {
          arr.push(ele);
        }
      });
    }
    if (pushVehicle2) {
      pushArr.map((ele) => {
        if (ele.orderStatus === "Packed") {
          arr.push(ele);
        }
      });
    }
    if (pushVehicle3) {
      pushArr.map((ele) => {
        if (ele.orderStatus === "InTransit") {
          arr.push(ele);
        }
      });
    }
    if (pushVehicle4) {
      pushArr.map((ele) => {
        if (ele.orderStatus === "Delivered") {
          arr.push(ele);
        }
      });
    }
    
    
    

    setorderData([...arr],orderData);
    setListCount(orderData.length);
  };


    return (
      <>
        <Navbar />
        <div>
          <h1> Order</h1>
          <h5>Filter</h5>
          <h6>count:{listCount}</h6>
          <div className={style.checkbox}>
            <span className={style.inputorder}>
              <input
                defaultChecked={newitem}
                type="checkbox"
                value="vehicle1"
                onChange={handleChange}
              />
              New
            </span>
            <br />
            <span className={style.inputorder}>
              <input
                defaultChecked={pack}
                type="checkbox"
                value="vehicle2"
                onChange={handleChange}
              />
              Packed
            </span>
            <br />
            <span className={style.inputorder}>
              <input
                defaultChecked={intransit}
                type="checkbox"
                value="vehicle3"
                onChange={handleChange}
              />
              InTransit
            </span>
            <br />
            <span className={style.inputorder}>
              <input
                defaultChecked={deliever}
                type="checkbox"
                value="vehicle4"
                onChange={handleChange}
              />
              Delievered
            </span>
            <br />
           
            <br />
          </div>
        </div>
        <div className={style.subContainer}></div>

        <div className={style.container}>
          <div>
            <div id="table-section">
              <div id="table-wrapper">
                <div id="table-headers">
                  <table>
                    <tr className={style.trHeader}>
                      <th className={style.column1}>Id</th>
                      <th className={style.column2}>Customer</th>
                      <th className={style.column3}>Date</th>
                      <th className={style.column4}>Amount</th>
                      <th className={style.column5}>orderStatus</th>
                    </tr>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className={style.tableData}>
          {
            orderData.map((userList, index) => {
              return (
                <tr className={style.active} key={userList.profilePic}>
                  <td className={style.columnp1}>{userList.id}</td>
                  <td className={style.columnp2}>{userList.customerName}</td>
                  <td className={style.columnp3}>{userList.orderDate}</td>
                  <td className={style.columnp4}>{userList.amount}</td>
                  <td className={style.columnp5}>{userList.orderStatus}</td>
                </tr>
              );
            })}
        </div>
      </>
    );
  }


export default Order; */
